/*! For license information please see f5eda52b.7b20a800.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[26,5],{124:function(e,t,i){"use strict";i.r(t),i.d(t,"useModalState",(function(){return qt})),i.d(t,"ModalPortal",(function(){return It}));var a=i(0),r=i.n(a),n=i(36),o=i.n(n),d=i(152),s=i(313),c=i.n(s),l=i(137),u=(i(144),i(131)),p=i(119),m=i.n(p),h=i(136),f=i.n(h),_=i(196),g=i.n(_);const v=Object(l.styled)("div")`
  * {
    box-sizing: content-box;
  }
`;var b=function(e){return r.a.createElement(v,null,e.children)},y=(i(414),i(424),i(428),i(429)),q=i(430),C=i.n(q),I=i(206),E=i.n(I),D=i(120),T=i.n(D);const O=Object.freeze({required:"required",conditional:"conditional",derived:"derived",optional:"optional",extended:"extended"});var x=({type:e})=>{switch(e){case O.required:return r.a.createElement(E.a,{className:`${T.a.tag} ${T.a.required}`},"Required");case O.conditional:return r.a.createElement(E.a,{className:`${T.a.tag} ${T.a.conditional}`},"Conditional");case O.derived:return r.a.createElement(E.a,{className:`${T.a.tag} ${T.a.derived}`},"Derived");case O.optional:return r.a.createElement(E.a,{className:`${T.a.tag} ${T.a.optional}`},"Optional");case O.extended:return r.a.createElement(E.a,{className:`${T.a.tag} ${T.a.extended}`},"Extended");default:return null}},S=i(90),R=i.n(S),w=i(148),N=i.n(w);const M=({children:e,onToggle:t})=>r.a.createElement("div",{className:R.a.toggleMore,onClick:()=>{t()}},e);var P=({codeList:e=[],onToggle:t,isExpanded:i})=>{const a=e.map(e=>r.a.createElement("p",{key:e,className:R.a.fieldEnumValue},e));return r.a.createElement("div",{className:R.a.codeList},a.length<=5?r.a.createElement("div",null,a):i?r.a.createElement("div",null,a,r.a.createElement(M,{onToggle:t},"Show less",r.a.createElement(N.a,{name:"chevron_up",height:"8",width:"8",fill:"#7f55cc"}))):r.a.createElement("div",null,[...a.slice(0,5)],r.a.createElement(M,{onToggle:t},a.length-5," more",r.a.createElement(N.a,{name:"chevron_down",height:"8",width:"8",fill:"#7f55cc"}))))};const A=/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,H=/[^\\-]+|-|\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)/g,L=/^(\[\^?)(]?(?:[^\\\]]+|\\[\S\s]?)*)(]?)$/,F=/^(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??$/,k=0,U=1,V=2,j=3,B="Unclosed character class",$="Incomplete regex token",z="Reversed or invalid range",Y="Invalid or unsupported group type",G="Unclosed grouping",W="No matching opening parenthesis",Q="Interval quantifier cannot use value over 65,535",Z="Interval quantifier range is reversed",J="Quantifiers must be preceded by a token that can be repeated",X="Empty alternative effectively truncates the regex here";function K(e,t){return'<b class="err"'+(t?' title="'+t+'"':"")+">"+e+"</b>"}function ee(e,t){return'<b class="g'+t+'">'+e+"</b>"}function te(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function ie(e){if(e.length>1&&"\\"===e.charAt(0)){var t=e.slice(1);if(/^c[A-Za-z]$/.test(t))return"ABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(t.charAt(1).toUpperCase())+1;if(/^(?:x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})$/.test(t))return parseInt(t.slice(1),16);if(/^(?:[0-3][0-7]{0,2}|[4-7][0-7]?)$/.test(t))return parseInt(t,8);if(1===t.length&&"cuxDdSsWw".indexOf(t)>-1)return NaN;if(1===t.length)switch(t){case"b":return 8;case"f":return 12;case"n":return 10;case"r":return 13;case"t":return 9;case"v":return 11;default:return t.charCodeAt(0)}}return"\\"!==e?e.charCodeAt(0):NaN}function ae(e){var t,i,a="",r=L.exec(e),n={rangeable:!1,type:k};for(a+=(r={opening:r[1],content:r[2],closing:r[3]}).closing?r.opening:K(r.opening,B);t=H.exec(r.content);)if("\\"===(i=t[0]).charAt(0))/^\\[cux]$/.test(i)?(a+=K(i,$),n={rangeable:n.type!==U}):/^\\[dsw]$/i.test(i)?(a+="<b>"+i+"</b>",n={rangeable:n.type!==U,type:V}):"\\"===i?a+=K(i,$):(a+="<b>"+te(i)+"</b>",n={rangeable:n.type!==U,charCode:ie(i)});else if("-"===i)if(n.rangeable){var o=H.lastIndex,d=H.exec(r.content);if(d){var s=ie(d[0]);!isNaN(s)&&n.charCode>s||n.type===V||/^\\[dsw]$/i.test(d[0])?a+=K("-",z):a+="<u>-</u>",n={rangeable:!1,type:U}}else r.closing?a+="-":a+="<u>-</u>";H.lastIndex=o}else a+="-",n={rangeable:n.type!==U};else a+=te(i),n={rangeable:i.length>1||n.type!==U,charCode:i.charCodeAt(i.length-1)};return a+r.closing}var re=({regex:e})=>r.a.createElement("div",{className:"regex",dangerouslySetInnerHTML:{__html:(e=>{if("undefined"!=typeof window&&"undefined"!=typeof document){for(var t,i,a,r,n="",o=0,d=0,s=[],c={quantifiable:!1,type:k};t=A.exec(e);)if(a=(i=t[0]).charAt(0),r=i.charAt(1),"["===a)n+="<i>"+ae(i)+"</i>",c={quantifiable:!0};else if("("===a)2===i.length?n+=K(i,Y):(1===i.length&&o++,d=5===d?1:d+1,s.push({index:n.length+'<b class="gN">'.length,opening:i}),n+=ee(i,d)),c={quantifiable:!1};else if(")"===a)s.length?(n+=ee(")",d),c={quantifiable:!/^[=!]/.test(s[s.length-1].opening.charAt(2)),style:"g"+d},d=1===d?5:d-1,s.pop()):(n+=K(")",W),c={quantifiable:!1});else if("\\"===a)if(/^[1-9]/.test(r)){for(var l="",u=+i.slice(1);u>o;)l=/[0-9]$/.exec(u)[0]+l,u=Math.floor(u/10);if(u>0)n+="<b>\\"+u+"</b>"+l;else{var p=/^\\([0-3][0-7]{0,2}|[4-7][0-7]?|[89])([0-9]*)/.exec(i);n+="<b>\\"+p[1]+"</b>"+p[2]}c={quantifiable:!0}}else/^[0bBcdDfnrsStuvwWx]/.test(r)?/^\\[cux]$/.test(i)?(n+=K(i,$),c={quantifiable:!1}):"bB".indexOf(r)>-1?(n+="<b>"+i+"</b>",c={quantifiable:!1}):(n+="<b>"+i+"</b>",c={quantifiable:!0}):"\\"===i?n+=K(i,$):(n+=te(i),c={quantifiable:!0});else if(F.test(i)){if(c.quantifiable){var m=/^\{([0-9]+)(?:,([0-9]*))?/.exec(i);m&&(+m[1]>65535||m[2]&&+m[2]>65535)?n+=K(i,Q):m&&m[2]&&+m[1]>+m[2]?n+=K(i,Z):n+=(c.style?'<b class="'+c.style+'">':"<b>")+i+"</b>"}else n+=K(i,J);c={quantifiable:!1}}else"|"===i?(c.type===k||c.type===j&&!s.length?n+=K(i,X):n+=s.length?ee("|",d):"<b>|</b>",c={quantifiable:!1,type:j}):"^"===i||"$"===i?(n+="<b>"+i+"</b>",c={quantifiable:!1}):"."===i?(n+="<b>.</b>",c={quantifiable:!0}):(n+=te(i),c={quantifiable:!0});var h,f,_=0;for(f=0;f<s.length;f++)h=s[f].index+_,n=n.slice(0,h)+K(s[f].opening,G)+n.slice(h+s[f].opening.length),_+=K("",G).length;return n}})(e)}});var ne=({regex:e,examples:t=[]})=>r.a.createElement("div",{className:R.a.regexRestriction},r.a.createElement("div",null,"Values must meet the regular expression"),r.a.createElement(re,{regex:e}),t.length>0?r.a.createElement("div",null,r.a.createElement("br",null),r.a.createElement("div",null,"Examples:"),r.a.createElement("div",null,t.map((i,a)=>{const n=encodeURIComponent(e),o=encodeURIComponent(i);return r.a.createElement("a",{href:`http://www.regexplanet.com/advanced/xregexp/index.html?regex=${n}&input=${o}`,target:"_blank",key:a},`${i}${a<t.length-1?", ":""}`)}))):null),oe=i(253),de=i.n(oe),se=i(1);const ce=({children:e,...t})=>r.a.createElement(f.a,Object(se.a)({variant:"data",component:"div",color:"#000"},t),e),le=({children:e,...t})=>r.a.createElement(f.a,Object(se.a)({variant:"subtitle",color:"#151c3d"},t),e);var ue=i(255),pe=i.n(ue),me=i(305),he=i(220),fe=i.n(he),_e=i(121),ge=i.n(_e);var ve=({codes:e})=>r.a.createElement("div",null,e.map(e=>r.a.createElement("div",{style:{marginBottom:"10px"}},r.a.createElement(me.a,Object(se.a)({},me.b,{code:e,language:"js",theme:fe.a}),({className:e,style:t,tokens:i,getLineProps:a,getTokenProps:n})=>r.a.createElement("pre",{className:`${e} ${ge.a.code}`,style:t},i.map((e,t)=>r.a.createElement("div",a({line:e,key:t}),e.map((e,t)=>r.a.createElement("span",n({token:e,key:t}))))))))));var be=({field:e,scripts:t,onCloseClick:i})=>r.a.createElement(pe.a,{title:r.a.createElement(f.a,{variant:"subtitle"},"Field Script Restriction for: ",r.a.createElement("span",{style:{fontWeight:600}},e)),onCancelClick:i,onCloseClick:i,actionVisible:!1,buttonSize:"sm"},r.a.createElement(ve,{codes:t})),ye=i(167),qe=i.n(ye);function Ce(){var e=Object(y.a)(["\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  div {\n    display: inline;\n    :not(:first-child) {\n      margin-top: 5px;\n    }\n  }\n"]);return Ce=function(){return e},e}function Ie(){var e=Object(y.a)(["\n  margin-bottom: 10px;\n  font-family: trade-gothic-next;\n"]);return Ie=function(){return e},e}var Ee=Object(l.styled)("div")(Ie()),De=Object(l.styled)("div")(Ce()),Te=function(e){var t=e.name,i=de()(t);return r.a.createElement(le,null,i," (",t,")")},Oe=function(e){var t=e.name,i=e.description;return r.a.createElement("div",{className:R.a.fieldDescription},r.a.createElement("div",{className:R.a.name},t),r.a.createElement("div",null,i))},xe=function(e){var t=e.fieldCount;return r.a.createElement(E.a,{className:R.a.tag+" "+R.a.fields,style:{marginTop:"3px"}},t+" Field"+(t>1?"s":""))},Se=function(e){var t=e.schema,i=e.menuItem;e.isLatestSchema;if(void 0===t)return null;Object(u.a)().siteConfig.customFields.GATEWAY_API_ROOT;var n=Object(a.useMemo)((function(){return t.fields.reduce((function(e,t){return e[t.name]=!1,e}),{})}),[t]),o=Object(a.useState)(n),d=o[0],s=o[1];Object(a.useEffect)((function(){s(n)}),[t]);var c=function(e){return function(){var t;return s(Object.assign({},d,((t={})[e]=!d[e],t)))}},l=function(e){return d[e]},p=r.a.useState(null),m=p[0],h=p[1],f=function(e){var t=e.original.notes;return r.a.createElement("div",null,t&&r.a.createElement(Ee,null,t))},_=[{Header:"Field & Description",id:"fieldDescription",Cell:function(e){var t=e.original,i=t.name,a=t.description;return r.a.createElement(Oe,{name:i,description:a})},style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"},width:200},{Header:"Required?",id:"attributes",Cell:function(e){var t=e.original,i=qe()(t,"required","optional");return r.a.createElement(De,null,"required"==i&&r.a.createElement(x,{type:O.required}),"optional"==i&&r.a.createElement(x,{type:O.optional}),"conditional"==i&&r.a.createElement(x,{type:O.conditional}),"derived"==i&&r.a.createElement(x,{type:O.derived}),"extended"==i&&r.a.createElement(x,{type:O.extended}))},style:{padding:"8px"},width:96},{Header:"Type",id:"valueType",accessor:function(e){return function(e){switch(e){case"number":return"QUANTITY";case"string":return"TEXT";case"coded":return"CODE";default:return e.toUpperCase()}}(e.valueType)},style:{padding:"8px"},width:70},{Header:"Permissible Values",id:"permissibleValues",accessor:"permissible",Cell:function(e){var t=e.original,i=t.name,a=t.permissible,n=void 0===a?{}:a,o=t.examples,d=n.regex,s=void 0===d?null:d,u=n.codeList,p=void 0===u?null:u,m=o&&o.split(",");return s?r.a.createElement(ne,{regex:s,examples:m}):p?r.a.createElement(P,{codeList:p,onToggle:c(i),isExpanded:l(i)}):null},style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"},width:150},{Header:"Notes & Mappings",Cell:f,style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}}],g=[{Header:"COVID-Related Patterns and Codes",id:"fieldDescription",Cell:function(e){var t=e.original,i=t.name,a=t.description;return r.a.createElement(Oe,{name:i,description:a})},style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}},{Header:"Code",id:"keyCode",accessor:"keyCode",Cell:function(e){var t=e.original,i=t.name,a=t.keyCode,n=void 0===a?{}:a,o=(t.examples,n.regex),d=void 0===o?null:o,s=n.codeList,u=void 0===s?null:s;return d?r.a.createElement(ne,{regex:d,examples:examplesplit}):u?r.a.createElement(P,{codeList:u,onToggle:c(i),isExpanded:l(i)}):null},style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}},{Header:"Result Codes or Units",id:"permissibleValues",accessor:"permissible",Cell:function(e){var t=e.original,i=t.name,a=t.permissible,n=void 0===a?{}:a,o=t.examples,d=n.regex,s=void 0===d?null:d,u=n.codeList,p=void 0===u?null:u,m=o&&o.split(",");return s?r.a.createElement(ne,{regex:s,examples:m}):p?r.a.createElement(P,{codeList:p,onToggle:c(i),isExpanded:l(i)}):null},style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}},{Header:"Notes & Mappings",Cell:f,style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}}],v=r.a.createRef();return r.a.createElement("div",{ref:i.contentRef,"data-menu-title":i.name,className:R.a.schema},m&&r.a.createElement(It,null,r.a.createElement(be,{field:m.fieldName,scripts:m.content,onCloseClick:function(){h(null)}})),r.a.createElement("div",{style:{display:"flex",flexDirection:"row",alignItems:"center",marginBottom:"10px"}},r.a.createElement(Te,{name:t.name}),r.a.createElement(xe,{fieldCount:t.fields.length})),r.a.createElement("div",{style:{marginBottom:"10px",display:"flex",flexDirection:"row",justifyContent:"space-between",alignItems:"flex-start"}},r.a.createElement(ce,{style:{flex:1}},t&&t.description,r.a.createElement("div",null))),r.a.createElement("div",{ref:v},r.a.createElement(C.a,{parentRef:v,columns:_,data:t.fields,showPagination:!1,defaultPageSize:t.fields.length,sortable:!0,cellAlignment:"top",withOutsideBorder:!0}),t.profiles&&t.profiles.length>0?r.a.createElement(C.a,{parentRef:v,columns:g,data:t.profiles,showPagination:!1,defaultPageSize:t.profiles.length,sortable:!0,cellAlignment:"top",withOutsideBorder:!0}):r.a.createElement("p",null,"No COVID 19-specific patterns defined.")))},Re=(i(493),i(122)),we=i.n(Re),Ne=i(205),Me=i.n(Ne);const Pe=[{content:"All",value:"no_active_filter"}],Ae=Object(l.styled)(g.a)`
  min-width: 190px;
`;var He=({files:e=0,fields:t=0,dataTiers:i=[],dataAttributes:a=[],searchParams:n={},onSearch:o=(e=>console.log(e.target.val))})=>{const[d,s]=r.a.useState("");Me()(o,500);return r.a.createElement(f.a,{variant:"data",color:"#151c3d",css:{fontFamily:"trade-gothic-next"}},r.a.createElement("div",{className:we.a.fileFilters},`${e} files > ${t} fields`,r.a.createElement("div",{className:we.a.dataSelectors},"Filter required:"," ",r.a.createElement(Ae,{options:a,value:n.attribute,onChange:(c="attribute",e=>o({...n,[c]:e})),size:"sm"}))));var c},Le=i(156),Fe=i(307),ke=i(496);var Ue=({children:e,minZoom:t=.25,maxZoom:i=1,zoomStep:a=.05,menu:n})=>{const o=Object(Le.useTheme)(),[d,s]=r.a.useState(1);return r.a.createElement("div",{className:Fe.a`
        border: solid 1px ${o.colors.grey_2};
        transform: scale(1);
        overflow: hidden;
      `},r.a.createElement(ke.b,{defaultScale:1,defaultPositionX:0,defaultPositionY:0,doubleClick:{disabled:!0},options:{minScale:t,maxScale:i,limitToBounds:!1,limitToWrapper:!1},onWheel:({scale:e})=>{s(e)},wheel:{step:200}},({resetTransform:o,setScale:c})=>{const l=Me()(e=>{c(e)},500);return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"tools",style:{position:"absolute",zIndex:1,display:"flex"}},r.a.createElement("input",{type:"range",min:t,max:i,step:a,value:d,onChange:e=>{const t=Number(e.target.value);s(t),l(t)}}),r.a.createElement("button",{onClick:()=>{s(1),setTimeout(()=>{o()},0)}},"reset")),r.a.createElement(ke.a,null,e),r.a.createElement("div",null,n({resetTransform:o})))}))},Ve=i(191);const je=Object(Ve.default)("li")`
  flex: auto;
  text-align: center;
  list-style-type: none;
  position: relative;

  display: flex;
  flex-direction: row;
  padding-top: var(--tree-node-padding);
  padding-right: var(--tree-line-height);
  padding-bottom: 0;
  padding-left: calc(var(--tree-line-height) + var(--arrow-width));
  margin-top: 0px;

  /* line cont */
  ::before,
  ::after {
    content: '';
    position: absolute;
    left: 0;
    width: var(--tree-line-height);
    height: 100%;
  }

  /* vertical line */
  ::before {
    border-left: var(--tree-line-width) solid var(--tree-line-color);
  }

  /* horizontal line */
  ::after {
    top: 100%;
    transform: translateY(-50%);
    border-top: var(--tree-line-width) solid var(--tree-line-color);
  }

  /* single child node - no line */
  :only-child {
    padding: 0;
    padding-left: var(--arrow-width);
    ::after,
    :before {
      display: none;
    }
  }

  /* top curve */
  :first-of-type {
    ::before {
      bottom: -50%;
      border-radius: var(--tree-line-border-radius) 0 0 0;
    }
    ::after {
      border-radius: var(--tree-line-border-radius) 0 0 0;
    }
  }

  /* bottom curve */
  :last-of-type {
    ::before {
      border-radius: 0 0 0 var(--tree-line-border-radius);
      top: -50%;
    }
    ::after {
      top: 0;
      border: 0 none;
      border-bottom: var(--tree-line-width) solid var(--tree-line-color);
      border-radius: 0 0 0 var(--tree-line-border-radius);
    }
  }

  /* arrow */
  /* first node*/
  .arrow {
    display: none;
  }
  .ChildrenContainer .arrow {
    display: block;
    width: 20px;
    position: absolute;
    width: 0;
    height: 0;
    top: 50%;
    border-style: solid;
    border-width: 7px 0 7px 9px;
    border-color: transparent transparent transparent var(--tree-line-color);
    transform: translate(-9px, -50%);
    z-index: 2;
  }
`,Be=Object(Ve.default)("ul")`
  display: flex;
  padding-inline-start: 0;
  padding-top: var(--tree-line-height);
  position: relative;

  flex-direction: column;
  padding-left: calc(var(--tree-line-height));
  padding-top: 0px;
  margin: 0px;
  ::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    width: 0;
    border-top: var(--tree-line-width) solid var(--tree-line-color);
    width: var(--tree-line-height);
    transform: translateY(-50%);
  }
`;var $e=function({children:e,label:t,className:i=""}){return a.createElement(je,{className:"NodeContainer "+i},a.createElement("div",{className:"arrow"}),t,a.Children.count(e)>0&&a.createElement(Be,{className:"ChildrenContainer"},e))};const ze=Object(Ve.default)("ul")`
  padding-inline-start: 0;
  margin: 0;
`,Ye=Object(Ve.default)(ze)`
  --line-height: ${({lineHeight:e})=>e};
  --line-width: ${({lineWidth:e})=>e};
  --line-color: ${({lineColor:e})=>e};
  --line-border-radius: ${({lineBorderRadius:e})=>e};
  --node-padding: ${({nodePadding:e})=>e};
  --tree-line-height: var(--line-height, 20px);
  --tree-line-width: var(--line-width, 1px);
  --tree-line-color: var(--line-color, black);
  --tree-line-border-radius: var(--line-border-radius, 5px);
  --tree-node-padding: var(--node-padding, 5px);
  --arrow-width: 9px;
`,Ge=a.forwardRef(({children:e,label:t,...i},r)=>a.createElement(Ye,Object(se.a)({},i,{ref:r}),a.createElement($e,{label:t},e)));var We=a.memo(Ge);const Qe=r.a.createContext(""),Ze=({expanded:e=!1,onClick:t})=>{const i=Object(Le.useTheme)();return r.a.createElement("button",{onClick:t,className:Fe.a`
        width: 12px;
        height: 12px;
        padding: 0px;
        line-height: 0px;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        background-color: ${i.colors.white};
        cursor: pointer;
        border: none;
      `},e?"-":"+")},Je=({fileName:e,required:t=!1,fields:i,onExpandStateChange:a})=>{const n=Object(Le.useTheme)(),o=r.a.useContext(Qe),[d,s]=r.a.useState(!1),c=r.a.useMemo(()=>i.filter(e=>"required"==e.required).map(e=>({...e,isMatch:e.name.includes(o)})),[o]),u=r.a.useMemo(()=>i.filter(e=>"optional"==e.required).map(e=>({...e,isMatch:e.name.includes(o)})),[o]),p=r.a.useMemo(()=>i.filter(e=>"conditional"==e.required).map(e=>({...e,isMatch:e.name.includes(o)})),[o]),m=e=>e.isMatch,h=r.a.useMemo(()=>c.some(m)||u.some(m),[o]),_=r.a.useRef(!0);r.a.useEffect(()=>{_.current||s(!!h),_.current=!1},[o]);const g=Object(l.styled)("li")`
    list-style-position: inside;
    word-wrap: break-word;
    list-style-type: disc;
  `,v=Object(l.styled)("ul")`
    padding-left: 10px;
  `,b=rt();return r.a.useEffect(()=>{const e=({expanded:e})=>{s(e)};return b.subscribe(e),()=>b.unsubscribe(e)},[]),r.a.createElement("div",{className:Fe.a`
        display: flex;
        flex-direction: column;
        justify-content: center;
        opacity: ${h?1:.25};
        margin: 10px 0px;
      `},r.a.createElement("div",{className:Fe.a`
          border-radius: 10px;
          border: solid 2px ${t?n.colors.error:n.colors.secondary};
          background: ${n.colors.white};
          width: 260px;   // width of 
          padding: 2px;
        `},r.a.createElement("div",{className:Fe.a`
            display: flex;
            justify-content: space-between;
            align-items: center;
          `},r.a.createElement(f.a,{variant:"data",color:"secondary",bold:!0,className:Fe.a`
              margin-left: 5px;
            `},e),r.a.createElement(E.a,{className:Fe.a`
              background: ${n.colors.primary_1};
              display: flex;
              cursor: pointer;
            `,onClick:e=>{s(!d),a(!d)}},r.a.createElement("div",null,o&&o.length?`${c.filter(m).length+u.filter(m).length+p.filter(m).length} / ${i.length}`:c.length+u.length+p.length," ","fields"),r.a.createElement("div",{className:Fe.a`
                margin-left: 5px;
              `},r.a.createElement(Ze,{expanded:d})))),d&&r.a.createElement("div",{className:Fe.a`
              text-align: left;
            `},!!c.length&&r.a.createElement(f.a,{color:"error",bold:!0},"Required (",c.length," fields)"),r.a.createElement(v,null,c.map(e=>r.a.createElement(g,{key:e.name},r.a.createElement(f.a,{variant:"data",color:e.isMatch?"black":"grey_2"},e.name)))),!!u.length&&r.a.createElement(f.a,{color:"secondary_dark",bold:!0},"Optional (",u.length," fields)"),r.a.createElement(v,null,u.map(e=>r.a.createElement(g,{key:e.name},r.a.createElement(f.a,{variant:"data",color:e.isMatch?"black":"grey_2"},e.name)))),!!p.length&&r.a.createElement(f.a,{color:"orange",bold:!0},"Conditional (",p.length," fields)"),r.a.createElement(v,null,p.map(e=>r.a.createElement(g,{key:e.name},r.a.createElement(f.a,{variant:"data",color:e.isMatch?"black":"grey_2"},e.name)))))))},Xe=({fileDef:e,onExpandStateChange:t})=>{const i=({fileName:e,required:i,children:a,fields:n})=>r.a.createElement($e,{label:r.a.createElement(Je,{fileName:e,required:i,fields:n,onExpandStateChange:t})},a);return r.a.createElement(i,{fileName:e.name,fields:e.fields,required:e.required},e.children.map(e=>r.a.createElement(Xe,{fileDef:e,key:e.name,onExpandStateChange:t})))};var Ke=r.a.forwardRef(({searchString:e,rootFile:t,onNodeExpand:i},a)=>{const n=Object(Le.useTheme)(),o=e=>t=>{i({fileName:e,expanded:t})},d=()=>r.a.createElement(Je,{fileName:t.name,fields:t.fields,onExpandStateChange:o(t.name),required:!0});return r.a.createElement(Qe.Provider,{value:e},r.a.createElement(We,{ref:a,label:r.a.createElement(d,null),lineHeight:"40px",lineWidth:"4px",lineBorderRadius:"25px",lineColor:n.colors.grey_1,nodePadding:"2px"},t.children.map(e=>r.a.createElement(Xe,{fileDef:e,key:e.name,onExpandStateChange:o(e.name)}))))}),et=i(128),tt=i(258),it=i.n(tt);const at=r.a.createContext(),rt=()=>r.a.useContext(at);var nt=({data:e,searchValue:t})=>{const i=Object(Le.useTheme)(),a=r.a.createRef(),n=(()=>{let e=[];return{subscribe:t=>e=e.concat(t),unsubscribe:t=>e=e.filter(e=>{}),listeners:e,publish:t=>{e.forEach(e=>{e(t)})}}})(),o=()=>{n.publish({expanded:!0})};return r.a.createElement("div",{style:{display:"flex",cursor:"grab",position:"relative"},ref:a},r.a.createElement(et.Global,{styles:et.css`
          .dict_src-pages-dictionary- {
            /* experimental css properties */
            width: -webkit-fill-available;
            width: -moz-available;
            width: stretch;
            height: -webkit-fill-available;
            height: -moz-available;
            height: stretch;
          }
        `}),r.a.createElement(Ue,{menu:({resetTransform:e})=>r.a.createElement("div",{style:{border:"solid 1px "+i.colors.grey_2,position:"absolute",cursor:"default",background:i.colors.white,padding:8,right:8,top:8}},r.a.createElement(f.a,{color:"primary",css:{fontFamily:"trade-gothic-next"}},"Filter by Data Tier"),r.a.createElement(it.a,{variant:"secondary",onClick:()=>(e=>{e(),n.publish({expanded:!1})})(e)},"Collapse All"),r.a.createElement(it.a,{variant:"secondary",onClick:o},"Expand All"))},r.a.createElement("div",{style:{height:800,width:2e3,display:"flex",alignItems:"center"}},r.a.createElement(at.Provider,{value:n},r.a.createElement(Ke,{searchString:t,rootFile:e,onNodeExpand:({fileName:e,expanded:t})=>{console.log(e,t)}})))))},ot=i(497),dt=i(600),st=i.n(dt);const ct=(e,t)=>{const[i,a]=r.a.useState("");return r.a.useEffect(()=>{const i=i=>{const r=(()=>{const i=e.find(e=>{if(e&&e.current){const{top:i}=e.current.getBoundingClientRect();if(i>=0&&i<=t)return e.current}});return i?i.current:null})();if(r){const e=r.dataset.menuTitle;a(e)}};return document.addEventListener("scroll",i),()=>document.removeEventListener("scroll",i)},[e]),i};var lt=({contents:e,scrollYOffset:t,...i})=>{const a=e.map(e=>e.contentRef),n=ct(a,t),o=e.map(e=>e.name===n?{...e,active:!0}:e);return r.a.createElement(st.a,Object(se.a)({contents:o,scrollYOffset:t},i))},ut=i(601),pt=i.n(ut);i(240);const mt=({children:e,visible:t})=>r.a.createElement("div",{style:{display:t?"block":"none"}},e),ht=i(635);var ft=i(636),_t=i.n(ft),gt=i(645),vt=i.n(gt),bt=i(647),yt=i.n(bt);const qt=()=>{const[e,t]=Object(a.useState)(!1);return[e,e=>{t(e);const i=document.getElementsByTagName("html")[0].classList;e?i.add("modal-open"):i.remove("modal-open")}]},Ct=r.a.createRef(),It=({children:e})=>{const t=Ct.current;return t?o.a.createPortal(r.a.createElement("div",{style:{width:"100vw",height:"100vh"}},r.a.createElement(pe.a.Overlay,null,e)),t):null},Et=i(650),Dt=i(651);const Tt=({schemas:e,menuContents:t,isLatestSchema:i})=>e.length>0?e.map(e=>{const a=pt()(t,{name:de()(e.name)});return r.a.createElement(Se,{schema:e,menuItem:a,isLatestSchema:i})}):r.a.createElement("div",null,"No schemas found");t.default=function(){const[e,t]=Object(a.useState)(Et.currentVersion),[i,n]=Object(a.useState)(Et.dictionary),[o,s]=Object(a.useState)(Dt),[p,h]=Object(a.useState)({tier:"",attribute:""}),[_,v]=Object(a.useState)(""),y=async e=>{try{const{dict:i,tree:a}=await async function(e){try{const t=await c.a.get(`/data/schemas/${e}.json`),i=await c.a.get(`/data/schemas/${e}_tree.json`);return{dict:t.data,tree:i.data}}catch(t){throw t}}(e);t(e),n(i),s(a)}catch(i){alert("DICTIONARY FETCHING ERROR - VERSION NOT AVAILABLE")}},q=Object(u.a)(),{siteConfig:{customFields:{PLATFORM_UI_ROOT:C="",GATEWAY_API_ROOT:I=""}}}=q,E=r.a.useMemo(()=>{const e=qe()(i,"schemas",[]).map(e=>e.fields),t=yt()(e).reduce((e,t)=>{qe()(t,"required",!1);return e.attributes.push(O.required),e.attributes.push(O.conditional),e.attributes.push(O.optional),e.tiers.push(O.extended),e},{tiers:[],attributes:[]});return{tiers:_t()(t.tiers),attributes:_t()(t.attributes)}},[i]),D=r.a.useMemo(()=>i.schemas.map(e=>{const{tier:t,attribute:i}=p,a=e.fields.filter(e=>{const t=qe()(e,"required","optional");let a=!1;return"no_active_filter"===i||((i===O.conditional&&"conditional"==t||i===O.required&&"required"==t||i===O.optional&&"optional"==t||""===i||"no_active_filter"===i)&&(a=!0),a)});return{...e,fields:a}}).filter(e=>e.fields.length>0),[p,i]),T=D.length,x=D.reduce((e,t)=>e+t.fields.length,0),S=(e=>{const t=e.map(e=>e.name);return i.schemas.map(e=>({key:e.name,name:de()(e.name),contentRef:Object(a.createRef)(),active:!1,disabled:!t.includes(e.name)}))})(D),R=ht.sort().slice(-1)[0]===e,w=Object.freeze({OVERVIEW:"OVERVIEW",DETAILS:"DETAILS"}),[N,M]=r.a.useState(w.DETAILS);return Object(l.styled)(gt.Tab)`
    border: 0 none;
    position: relative;

    &.active {
      border: 0 none;

      ::after {
        content: '';
        border-bottom: 2px solid #00c79d;
        position: absolute;
        bottom: -2px;
        left: 50%;
        width: 80%;
        margin-left: -40%;
      }
    }
  `,r.a.createElement(l.ThemeProvider,null,r.a.createElement("div",{id:"modalCont",className:m.a.modalCont,ref:Ct}),r.a.createElement(d.a,{permalink:"dictionary"},r.a.createElement(b,null,r.a.createElement("div",{className:m.a.mainContainer},r.a.createElement("div",{className:m.a.dict},r.a.createElement("div",{className:m.a.heading},r.a.createElement(f.a,{color:"#151c3d",css:{fontFamily:"trade-gothic-next-condensed",fontSize:"28px",display:"inline-block",marginRight:"55px",flexShrink:0},as:"h1"},"Data Dictionary"),r.a.createElement(f.a,{variant:"paragraph",color:"#000",css:{fontFamily:"trade-gothic-next"}},"The C19HCC Data Dictionary anchors the cohort descriptions and other definitions. The classes and elements are not expected to be literally presented in any EHR. It will require manual effort to map the EHR to the cohort definitions. The classes and elements listed here align to standard models such as FHIR and OHDSI CDM, borrowing concepts from both.")),r.a.createElement("div",{className:m.a.infobar},r.a.createElement("div",null,r.a.createElement("form",null,r.a.createElement("div",{style:{width:"150px",marginRight:"10px"}},r.a.createElement(g.a,{"aria-label":"version-select",value:e,options:Et.versions.map(e=>({content:"Version "+e,value:e})),onChange:e=>y(e)}))),r.a.createElement("span",null,r.a.createElement(f.a,{variant:"data",css:{fontFamily:"trade-gothic-next"}},"Last updated: "),r.a.createElement(f.a,{variant:"data",bold:!0,css:{fontFamily:"trade-gothic-next"}},Object(ot.format)(qe()(i,"updatedAt",""),"MMMM D, YYYY")))),r.a.createElement(vt.a,{value:N,onChange:(e,t)=>{M(t)},styles:{marginBottom:"-2px"}}),r.a.createElement("div",null)),r.a.createElement(He,{files:T,fields:x,dataTiers:Pe.concat(E.tiers.map(e=>({content:de()(e),value:e}))),dataAttributes:Pe.concat(E.attributes.map(e=>({content:de()(e),value:e}))),searchParams:p,onSearch:e=>h(e)}),r.a.createElement(mt,{visible:N===w.DETAILS},r.a.createElement(Tt,{schemas:D,menuContents:S,isLatestSchema:R})),r.a.createElement(mt,{visible:!1},r.a.createElement(nt,{searchValue:_,data:o}))),r.a.createElement(mt,{visible:!0},r.a.createElement("div",{className:m.a.menu},r.a.createElement(lt,{title:"Clinical Classes",contents:S,color:"#0774d3",scrollYOffset:"70",dataTiers:E.tiers.map(e=>({content:de()(e),value:e})),dataAttributes:E.attributes.map(e=>({content:de()(e),value:e}))})))))))}},153:function(e,t,i){"use strict";var a=i(0),r=i.n(a),n=i(130),o=i.n(n);t.a=e=>{r.a.useRef();return r.a.createElement("div",{className:"navbar__search",key:"search-box"},r.a.createElement("span",{"aria-label":"expand searchbar",role:"button",className:o()("search-icon",{"search-icon-hidden":e.isSearchBarExpanded}),tabIndex:0}))}},155:function(e,t,i){"use strict";var a=i(0),r=i.n(a),n=i(131),o=(i(133),i(85)),d=i.n(o);t.a=function(){const e=Object(n.a)(),{siteConfig:t={}}=e;return r.a.createElement("footer",{className:d.a["nav-footer"],id:"footer"},r.a.createElement("div",{className:d.a.footerWrapper},r.a.createElement("div",{className:d.a.footerLogo}),r.a.createElement("div",{className:d.a.footerContent},r.a.createElement("section",{className:d.a.footerLinks}),r.a.createElement("section",{className:d.a["legal-text"]},t.themeConfig.footer.copyright),r.a.createElement("section",{className:d.a["legal-text"]},r.a.createElement("a",{href:"https://www.icgc-argo.org",target:"_blank"},"Based on the ICGC ARGO Data Platform")," ")),r.a.createElement("div",{className:d.a.footerLogo})))}},635:function(e){e.exports=JSON.parse('["2.70","2.66"]')},650:function(e){e.exports=JSON.parse('{"dictionary":{"name":"COVID Data Dictionary","version":"2.70","schemas":[{"name":"root","description":"Metadata applicable to all data elements.","fields":[{"name":"reported_date","valueType":"date","description":"The date or date-time the observation is reported."},{"name":"reporter_organization_id","valueType":"ID","description":"The identifier of the organization reporting.","notes":"Either the reporting organization or the practitioner should be provided."},{"name":"reporter_practitioner_id","valueType":"ID","description":"The identifier of the practitioner reporting.","notes":"Either the reporting organization or the practitioner should be provided."}]},{"name":"patient","description":"The collection of data elements with demographic information about a patient.","parent":"root","fields":[{"name":"patient_id","valueType":"ID","description":"Unique identifier assigned to the patient.","required":"required","notes":"FHIR: Patient.identifier, PCORnet: Demographics.patid, OHDSI CDM: Person.person_id, Sentinel: Demographic.PatID"},{"name":"date_of_birth","description":"The actual or approximate date of birth.","required":"optional","valueType":"date","note:":"FHIR: Patient.birthDate, PCORnet: Demographics.birth_date, Demographics.birth_time, OHDSI CDM: Person.year_of_birth, Person.month_of_birth, Person.day_of_birth, Person.birth_datetime, Sentinel: Demographic.Birth-Date, I2B2: Demographics.birth_date"},{"name":"administrative_gender","description":"The gender that the patient is considered to have for administration and record keeping purposes.","required":"required","valueType":"code","permissible":{"codeList":["Male","Female","Other","Unknown"]},"notes":"Codes must align with FHIR Administrative Gender value set (http://hl7.org/fhir/ValueSet/administrative-gender). FHIR: Patient.gender, OHDSI CDM: Person.gender_concept_id, PCORnet: Demographics.sex, Sentinel: Demographic.Sex, I2B2: Demographics.sex"},{"name":"race","description":"Concepts classifying the person into a named category of humans sharing common history, traits, geographical origin or nationality. The race codes used to represent these concepts are based upon the CDC Race and Ethnicity Code Set Version 1.0.","valueType":"code","required":"optional","permissible":{"codeList":["American Indian or Alaska Native","Asian","Black or African American","Native Hawaiian or Other Pacific Islander","White","Unknown","Asked but no answer"]},"notes":"Codes from http://hl7.org/fhir/us/core/ValueSet/omb-race-category. FHIR: Patient.extension: us-core-race, PCORnet: Demographics.race, OHDSI CDM: Person.race_concept_id, Sentinel: Demographic.Race, I2B2: Demographics.Race"},{"name":"ethnicity","description":"Concepts classifying the person into a named category of humans sharing common history, traits, geographical origin or nationality. The ethnicity codes used to represent these concepts are based upon the CDC Race and Ethnicity Code Set Version 1.0.","valueType":"code","required":"optional","permissible":{"codeList":["Hispanic or Latino","Non Hispanic or Latino"]},"notes":"Codes from http://hl7.org/fhir/us/core/ValueSet/omb-ethnicity-category. FHIR: Patient.extension: us-core-ethnicity, PCORnet: Demographics.hispanic, OHDSI CDM: Person.ethnicity_concept_id, Sentinel: Demographic.Hispanic, I2B2: Demographics.Hispanic"},{"name":"zip_code","description":"Zip code of the primary residence of the patient.","valueType":"string","required":"required","permissible":{"regex":"(^\\\\d{5}$)|(^\\\\d{9}$)|(^\\\\d{5}-\\\\d{4}$)"},"notes":"Five digit zip code is acceptable. FHIR: Patient.address, OHDSI CDM: Person.location_id, Sentinel: Demographic.Zip"}]},{"name":"Vital_status","description":"An indicator of whether the patient is alive or dead.","parent":"patient","fields":[{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required","notes":"FHIR: AdverseEvent.subject, PCORnet: Death.patid, Death_cause.patid, OHDSI CDM: Death.person_id"},{"name":"vital_status","description":"Donor\'s last known state of living or deceased.","valueType":"code","required":"required","permissible":{"codeList":["Alive","Deceased","Unknown"]},"notes":"FHIR: Patient.deceasedBoolean, PCORnet: Death.patid, Death_cause.patid, OHDSI CDM: DEATH.person_id (deprecated in CDM 6.0), VISIT_DETAIL.DISCHARGE_TO_CONCEPT_ID = 4216643 \'Patient died\', OBSERVATION_TYPE_CONCEPT_ID = 44818516 (EHR discharge status \'Expired\')."},{"name":"cause_of_death","description":"Indicates the cause of a patient\'s death.","valueType":"code","required":"conditional","permissible":{"codeList":["ICD-10 Code","SNOMED-CT code"]},"notes":"Cause of death is only required to be submitted if the patient is deceased. Mortality coding of COVID-19 with ICD-10 see: https://www.who.int/classifications/icd/COVID-19-coding-icd10.pdf?ua=1. FHIR: VRDR Cause of Death Condition profile; FHIR: AdverseEvent.suspectedEntity.causality.Extension (Proposed Name: cause-code : CodeableConcept), PCORnet: Death_cause.death_cause, Death_cause.death_cause_code, OHDSI CDM: Death.death_type_concept_id, Death.cause_concept_id."},{"name":"date_of_death","description":"Indicates the actual or approximate date of a patient\'s death.","valueType":"date","required":"conditional","notes":"Date of death is only required to be submitted if the patient is deceased. FHIR: Patient.deceasedDateTime, VRDR Death Date profile, AdverseEvent.date, PCORnet: Death.death_date, OHDSI CDM: Death.death_date"}]},{"name":"patient_PII","description":"Personally identifiable information about a patient.","parent":"patient","fields":[{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required","notes":"FHIR: Patient.identifier, PCORnet: Demographics.patid, OHDSI CDM: Person.person_id, Sentinel: Demographic.PatID"},{"name":"family_name","description":"The part of a name that links to the genealogy.","valueType":"string","notes":"FHIR: Patient.name.family. Patient PII not reported in other systems."},{"name":"given_name(s)","description":"Given names (not always \'first\'). Includes middle names.","valueType":"string","notes":"FHIR: Patient.name.given. Patient PII not reported in other systems."},{"name":"address_line","description":"This component contains the house number, apartment number, street name, street direction, P.O. Box number, delivery hints, and similar address information.","valueType":"string","notes":"FHIR: Patient.address.line. Patient PII not reported in other systems."},{"name":"address_city","description":"The name of the city, town, suburb, village or other community or delivery center.","valueType":"string","notes":"FHIR: Patient.address.city. Patient PII not reported in other systems."},{"name":"address_state","description":"US 2 letter state code.","valueType":"string","notes":"FHIR: Patient.address.state. Patient PII not reported in other systems."},{"name":"primary_phone_number","description":"Preferred phone number for the patient.","valueType":"string","notes":"FHIR: Patient.contact.telecom. Patient PII not reported in other systems."}]},{"name":"condition","description":"The collection of data elements related to a condition. A condition can be either a diagnosis or part of an ongoing problem list.","parent":"patient","fields":[{"name":"condition_id","valueType":"ID","description":"Unique identifier assigned to this instance of condition in the patient.","required":"required","notes":"FHIR: Condition.id, PCORnet: Diagnosis.diagnosisid, Condition.conditionid, OHDSI CDM: Condition_occurrence.condition_occurrence_id"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required","notes":"FHIR: Condition.subject, PCORnet: Diagnosis.patid, Condition.patid, OHDSI CDM: Condition_occurrence.person_id"},{"name":"code","valueType":"code","description":"The code to represent the condition, diagnosis or problem.","required":"required","permissible":{"codeList":["ICD-10-CM code","SNOMED CT disorder code"]},"notes":"This field accepts either ICD-10-CM or SNOMED-CT disorder codes. FHIR: Condition.code, PCORnet: Diagnosis.dx, Diagnosis.dx_type, Condition.condition, Condition.condition_type, OHDSI CDM: Condition_occurrence.condition_concept_id, I2B2: Diagnosis.DIAGNOSIS_CODE, Diagnosis.DIAGNOSIS_CODING_SYSTEM, Diagnosis.DIAGNOSIS_CODING_SYSTEM_VERSION."},{"name":"category","description":"Condition category which distinguishes between a diagnosis or a problem.","permissible":{"codeList":["problem-list-item","encounter-diagnosis"]},"valueType":"code","notes":"Include all codes defined in http://terminology.hl7.org/CodeSystem/condition-category. FHIR: Condition.category, I2B2: Diagnosis.DIAGNOSIS_SOURCE"},{"name":"recorded_date","description":"The date that the condition was recorded.","required":"required","valueType":"date","notes":"This is different from the condition onset date which could be a period of time prior to the date recorded by the provider. FHIR: Condition.recordedDate, PCORnet: Condition.report_date"},{"name":"onset_date","description":"An estimate or actual date that the patient reported experiencing the condition.","required":"required","valueType":"date","notes":"FHIR: Condition.onsetDateTime, PCORnet: Condition.onset_date, I2B2: Diagnosis.DIAGNOSIS_DATE"},{"name":"verification_date","description":"Date when condition was confirmed by positive test, imaging, biopsy, or other method.","required":"optional","valueType":"date","notes":"TBD"},{"name":"clinical_status","description":"The clinical status of the condition. (Reference source: FHIR Condition clinical status from http://hl7.org/fhir/condition-definitions.html#Condition.clinicalStatus).","valueType":"code","required":"required","permissible":{"codeList":["active","recurrence","relapse","inactive","remission","resolved"]},"notes":"The clinical status terms are described at http://hl7.org/fhir/valueset-condition-clinical.html. FHIR: Condition.clinicalStatus, PCORnet: Condition.condition_status, OHDSI CDM: Condition_occurrence.condition_status_concept_id"}]},{"name":"med_exposure","description":"An instance of a medication or substance introduced into the body. Medication exposures are indicated by a variety of records: medication orders, medication administrations, medication lists, and patient-reported medication statements.","parent":"patient","fields":[{"name":"med_id","valueType":"ID","description":"Unique identifier assigned to the medication exposure episode.","required":"required"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"code","valueType":"code","description":"The code to represent the medication that was administered.","required":"required","permissible":{"codeList":["RxNorm code: http://www.nlm.nih.gov/research/umls/rxnorm","NDC code: http://hl7.org/fhir/sid/ndc"]},"notes":"Medications can be reported in NDC or RxNorm. For NDC, the product code or package code is acceptable. For RxNorm, the ingredient  (IN) or multiple ingredient (MIN) codes are preferred over the brand codes or combination (Ingredient + Strength (SCDC), Ingredient + Dose Form (SCDF), etc.). FHIR: MedicationDispense.medicationCodeableConcept, MedicationRequest.medicationCodeableConcept, MedicationStatement.medicationCodeableConcept, PCORnet: Prescribing.rxnorm_cui, OHDSI CDM: Drug_exposure.drug_concept_id, Drug_exposure.drug_type_concept_id, I2B2: Medication.MEDICATION_ CLASSIFICATION_SYSTEM, Medication.MEDICATION_ CODING_SYSTEM, Medication.MEDICATION_ CLASSIFICATION_SYSTEM_VERSION, Medication.MEDICATION_ CLASSIFICATION_SYSTEM, Medication.MEDICATION_CODE, Medication.MEDICATION_CODING_SYSTEM_VERSION, Medication.RAW_ MEDICATION_CODE"},{"name":"med_dose_quantity","description":"The amount of the medication given at one administration event.","valueType":"quantity","notes":"FHIR: MedicationRequest(MedicationDispense).dosageInstruction.doseAndRate.dose[x], MedicationStatement.dosage.doseAndRate.dose[x], PCORnet: Prescribing.rx_dose_form, Prescribing.rx_dose_ordered, Prescribing.rx_dose_ordered_unit, OHDSI CDM: Drug_exposure.quantity"},{"name":"med_dose_units","description":"Unit of measure for the dose quantity of the administered medication.","valueType":"code","permissible":{"codeList":["UCUM code"]},"notes":"Nomenclature conforms to the Unified Code for Units of Measure (UCUM): https://unitsofmeasure.org/trac. FHIR: MedicationRequest(MedicationDispense).dosageInstruction.doseAndRate.doseQuantity.system/code, PCORNet: Prescribing.rx._dose_ordered_unit"},{"name":"med_route","description":"The path of the substance into the body for the administered medication.","permissible":{"codeList":["Include codes from http://snomed.info/sct  where concept is-a 284009009 (Route of administration values)"]},"valueType":"code","notes":"FHIR: MedicationDispense(MedicationRequest).dosageInstruction.route, PCORnet: Dispensing.dispense_route, PCORnet: Prescribing.rx_route, OHDSI CDM: Drug_exposure.route_concept_id, I2B2: Medication.RAW_MEDICATION_ROUTE"},{"name":"med_frequency","description":"The timing for the frequency that the medication was taken.","valueType":"string","notes":"Frequency should be reported as a string instead of a complex data structure to simplify the collection of data. FHIR: MedicationRequest.dosageInstruction.timing, PCORnet: Prescribing.rx_frequency"},{"name":"med_start_date","description":"The date when the medication was started.","required":"required","valueType":"date","notes":"FHIR: MedicationDispense.whenHandedOver, MedicationStatement.effectivePeriod.start, PCORnet: Dispensing.dispense_date, OHDSI CDM: Drug_exposure.drug_exposure_start_date, Drug_exposure.drug_exposure_start_datetime"},{"name":"med_stop_date","description":"The date when the medication as administered to the patient.","required":"required","valueType":"date","notes":"If the stop date is not provided, it is assumed the medication is ongoing at the time of the report. FHIR: MedicationStatement.effectivePeriod.end, OHDSI CDM: Drug_exposure.drug_exposure_end_date, Drug_exposure.drug_exposure_end_datetime. May be calculated from FHIR: MedicationStatement.basedOn(MedicationRequest).dispenseRequest.expectedSupplyDuration, OHDSI CDM: Drug_exposure.days_supply"}]},{"name":"procedure","description":"An action that was performed on or for a patient. This can be a physical intervention like an operation, or less invasive services such as counseling.","parent":"patient","fields":[{"name":"procedure_id","valueType":"ID","description":"Unique identifier assigned to the procedure occurrence.","required":"required","notes":"FHIR: Procedure.id, PCORnet: Procedures.proceduresid, OHDSI CDM: Device_exposure.device_exposure_id, Procedure_occurrence.procedure_occurrence_id"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"code","description":"The code representing the procedure. A procedure is an action performed on a patient, including diagnostic tests, therapies - such as respiratory therapy, surgeries, and other clinical interventions.","required":"required","valueType":"code","notes":"SNOMED CT (preferred), ICD-10-CM (preferred) or HCPCS (alternative). FHIR: Procedure.code, PCORnet: Procedures.px, Procedures.px_type, OHDSI CDM: Procedure_occurrence.procedure_concept_id, I2B2: Procedure.PROCEDURE_ CODING_SYSTEM, Procedure.PROCEDURE_CODE, Procedure.PROCEDURE_CODING_SYSTEM_VERSION"},{"name":"status","description":"The status of the procedure in terms of workflow.","required":"required","permissible":{"codeList":["in-progress","aborted","completed","entered-in-error"]},"valueType":"code"},{"name":"start_date","description":"The date and time the procedure started.","required":"required","valueType":"date","notes":"FHIR: Procedure.performedDateTime, Procedure.performedPeriod.start, PCORnet: Procedures.px_date, OHDSI CDM: Procedure_occurrence.procedure_date, Procedure_occurrence.procedure_datetime, I2B2: Procedure.PROCEDURE_DATE"},{"name":"end_date","description":"The date and time the procedure ended.","required":"optional","valueType":"date","notes":"FHIR: Procedure.performedPeriod.end, OHDSI CDM: Device_exposure.device_exposure_end_date, Device_exposure.device_exposure_end_datetime"}]},{"name":"lab_result","description":"An individual laboratory test and result value","parent":"patient","fields":[{"name":"lab_result_id","description":"Unique identifier of the lab test.","required":"required","valueType":"ID","notes":"FHIR: Observation.id, PCORnet: Lab_result_cm.lab_result_cm_id, OHDSI CDM: Measurement.measurement_id, Observation.observation_id"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required","notes":"FHIR: Observation.subject, PCORnet: Vital.patid, Lab_result_cm.patid, OHDSI CDM: Measurement.person_id, Observation.person_id"},{"name":"code","valueType":"code","description":"The code identifying the type of lab test performed.","required":"required","permissible":{"codeList":["LOINC code"]},"notes":"LOINC is preferred as the coding system for the lab test. In cases where there is a no LOINC code immediately available, a local test code would be accepted provided that there is a code system listing where the code originated. FHIR: Observation.code, PCORnet: Lab_result_cm.lab_loinc, Lab_result_cm.raw_lab_name, OHDSI CDM: Measurement.measurement_concept_id, Observation.observation_concept_id, I2B2: Laboratory_test.RAW_PANEL, Laboratory_test.LAB_ CLASSIFICATION _SYSTEM_VERSION, Laboratory_test.LAB_ CLASSIFICATION_SYSTEM, Laboratory_test.LAB_ CODING_SYSTEM, Laboratory_test.LAB_CODE, Laboratory_test.LAB_CODING_SYSTEM_VERSION, Laboratory_test.RAW_LAB_CODE"},{"name":"relevant_dateTime","valueType":"dateTime","description":"The date or dateTime when the specimen was collected.","notes":"FHIR: Observation.effectiveDateTime, Observation.basedOn(ServiceRequest).occurrenceDateTime, PCORnet: Lab_result_cm.lab_order_date, OHDSI CDM: Measurement.measurement_date, Measurement.measurement_datetime, Observation.observation_date, Observation.observation_datetime"},{"name":"result_dateTime","valueType":"dateTime","description":"The date or dateTime when the result was reported.","notes":"FHIR: Observation.issued, PCORnet: Lab_result_cm.result_date, Lab_result_cm.result_time"},{"name":"result_code","description":"The value associated with a lab result, represented as a code.","valueType":"code","notes":"FHIR: Observation.valueCodeableConcept, PCORnet: Lab_result_cm.result_snomed, OHDSI CDM: Measurement.value_as_concept_id, Observation.value_as_concept_id, I2B2: Laboratory_test.RESULT_QUALITATIVE"},{"name":"result_quantity","description":"The value associated with a lab result, represented as a number. The number can be either an integer or a float.","valueType":"quantity","notes":"FHIR: Observation.valueQuantity, PCORnet: Lab_result_cm.result_qual, Lab_result_cm.result_num, Lab_result_cm.result_modifier,Lab_result_cm.raw_result, Measurement.value_as_number, Observation.value_as_number, I2B2: Laboratory_test.RAW_RESULT, Laboratory_test.RESULT_MODIFIER, Laboratory_test.RESULT_NUMERICAL"},{"name":"result_units","description":"Unit of measure for the associated with the lab result quantity.","valueType":"code","permissible":{"codeList":["UCUM code"]},"notes":"Nomenclature conforms to the Unified Code for Units of Measure (UCUM): https://unitsofmeasure.org/trac. FHIR: Observation.valueQuantity.system/codes PCORnet: Lab_result_cm.result_unit, OHDSI CDM: Measurement.unit_concept_id, I2B2: Laboratory_test.RAW_UNIT, Laboratory_test.RESULT_UNIT"},{"name":"lab_result_interpretation","description":"An interpretation associated with the lab test result","valueType":"code","permissible":{"codeList":["Any of the codes specified in the http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation value set."]},"notes":"FHIR: Observation.interpretation, PCORnet: Lab_result_cm.abn_ind, I2B2: Laboratory_test.ABNORMAL_RESULT_INDICATOR"}]},{"name":"encounter","description":"Data elements associated with an encounter at a health care facility, such as an ambulatory visit, an emergency department visit, or a hospitalization.","parent":"patient","fields":[{"name":"encounter_id","description":"A unique identifier for the encounter.","required":"required","valueType":"ID","notes":"FHIR: Encounter.id, PCORnet: Encounter.encounterid, OHDSI CDM: Visit_occurrence.visit_occurrence_id, Sentinel: Encounter.EncounterID"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required","notes":"FHIR: Encounter.subject, PCORnet: Encounter.patid, OHDSI CDM: Visit_occurrence.person_id, Sentinel: Encounter.PatID"},{"name":"facility_id","valueType":"ID","description":"Unique identifier of the facility providing the encounter.","required":"optional","notes":"FHIR: Location.id, OHDSI CDM: Care_site.care_site_id, Location.location_id"},{"name":"encounter_class","description":"A classification of the encounter, e.g. ambulatory, emergency or inpatient","required":"required","valueType":"code","permissible":{"codeList":["AMB (ambulatory)","EMER (emergency)","FLD (field)","HH (home health)","IMP (inpatient encounter)","ACUTE (inpatient acute)","NONAC (inpatient non-acute)","OBSENC (observation encounter)","PRENC (pre-admission)","SS (short stay)","VR (virtual)"]},"notes":"Permissible values descriptions are available at http://hl7.org/fhir/v3/ActEncounterCode/vs.html. FHIR: Encounter.class, PCORnet: Encounter.enc_type, Sentinel: Encounter.EncType, I2B2: Procedure.VISIT.VISIT_TYPE"},{"name":"admission_date","description":"The date the patient was admitted for the encounter","required":"required","valueType":"date","notes":"FHIR: Encounter.period.start, PCORnet: Encounter.admit_date, Encounter.admit_time, OHDSI CDM: Visit_occurrence.visit_start_date, Visit_occurrence.visit_start_datetime, Sentinel: Encounter.ADATE, I2B2: Procedure.VISIT.ADMIT_DATE"},{"name":"admission_source","description":"The type of location the patient originated from.","required":"optional","valueType":"code","permissible":{"codeList":["Any of the codes specified in the http://terminology.hl7.org/CodeSystem/admit-source value set"]},"notes":"Definitions for the permissible values are available at http://hl7.org/fhir/codesystem-encounter-admit-source.html. FHIR: Encounter.hospitalization.admitSource or Encounter.hospitalization.origin(location).type, PCORnet: Encounter.admitting_source, OHDSI CDM: Visit_occurrence.admitting_source_concept_id, Sentinel: Encounter.Admitting_Source"},{"name":"discharge_date","description":"The date the patient was discharged from the encounter","required":"required","valueType":"date","notes":"FHIR: Encounter.period.end, PCORnet: Encounter.discharge_date, Encounter.discharge_time, OHDSI CDM: Visit_occurrence.visit_end_date, Visit_occurrence.visit_end_datetime, Sentinel: Encounter.DDATE, I2B2: Procedure.VISIT.DISCHARGE_DATE"},{"name":"discharge_disposition","description":"Categorization of the status of the patient at discharge according to the type of location the patient was discharged to.","valueType":"code","required":"required","permissible":{"codeList":["home (Home)","alt-home (Alternative home)","other-hcf (Other healthcare facility)","hosp (Hospice)","long (Long-term care)","aadvice (Left against advice)","exp (Expired)","psy (Psychiatric hospital)","rehab (Rehabilitation)","snf (Skilled nursing facility)","other (Other)"]},"notes":"Definitions for the permissible values are available at https://www.hl7.org/fhir/valueset-encounter-discharge-disposition.html. FHIR: Encounter.extension (Proposed Name: discharge-disposition: CodeableConcept), PCORnet: Encounter.discharge_disposition, Sentinel: Encounter.Discharge_Disposition"},{"name":"initial_diagnosis","description":"The initial working diagnosis (also known as \'chief complaint\') first entered into the EHR","valueType":"code","permissible":{"codeList":["ICD-10-CM code","SNOMED CT code"]},"notes":"FHIR: Encounter.diagnosis.condition (Role = CC), OHDSI CDM: Condition_occurrence with condition_status_concept_id = 4033240,   PCORnet: DIAGNOSIS.DX_SOURCE (IN)"},{"name":"admitting_diagnosis","description":"The main diagnosis code used to admit the patient.","valueType":"code","required":"conditional","permissible":{"codeList":["ICD-10-CM code","SNOMED CT disorder code"]},"notes":"An admitting diagnosis is only expected to be available for inpatient encounters. FHIR: Encounter.diagnosis.condition (Role = AD),OHDSI CDM: Condition_occurrence with condition_status_concept_id = 4203942, PCORnet: DIAGNOSIS with DX_SOURCE=AD"},{"name":"discharge_diagnosis","description":"The final diagnosis determined to be the main cause for the hospitalization after all testing, surgery, and workup are complete.","valueType":"code","required":"conditional","permissible":{"codeList":["ICD-10-CM code","SNOMED CT disorder code"]},"notes":"Discharge diagnosis is only expected to be available for inpatient encounters that have been completed. FHIR: Encounter.diagnosis.condition (Role = DD), OHDSI CDM: Condition_occurrence with condition_status_concept_id = 4230359, PCORnet: DIAGNOSIS with DX_SOURCE=DI"}]},{"name":"encounter_detail","description":"Department, unit or setting the patient visits during the course of an inpatient encounter, such as emergency department or intensive care unit.","parent":"encounter","fields":[{"name":"encounter_id","description":"A unique identifier for the encounter.","required":"required","valueType":"ID","notes":"OHDSI CDM: visit_detail_parent_id"},{"name":"encounter_detail_id","description":"A unique identifier for the instance of encounter setting.","required":"required","valueType":"ID","notes":"OHDSI CDM: visit_detail_id"},{"name":"type","description":"The type of setting according to its function/purpose","required":"required","valueType":"code","permissible":{"codeList":["Code from http://terminology.hl7.org/ValueSet/v3-ServiceDeliveryLocationRoleType value set."]},"notes":"Definitions for the permissible values for setting type are available at http://hl7.org/fhir/v3/ServiceDeliveryLocationRoleType/vs.html. OHDSI CDM: visit_detail_type_concept_id"},{"name":"arrival_date","description":"The date the patient arrived at the setting.","required":"optional","valueType":"date","notes":"OHDSI CDM: visit_detail_start_date, visit_detail_start_datetime"},{"name":"departure_date","description":"The date the patient departed the setting.","required":"optional","valueType":"date","notes":"OHDSI CDM: visit_detail_end_date, visit_detail_end_datetime"},{"name":"length of stay","description":"The length of time a patient spent in the setting.","required":"optional","valueType":"quantity","notes":"Can be derived from arrival and departure dates."}]},{"name":"patient_observation","description":"Clinical information obtained through examination, assessment, survey, or questioning, including vital signs.","parent":"patient","fields":[{"name":"observation_id","description":"Unique identifier of the observation.","required":"required","valueType":"ID","note":"FHIR: Observation.id, PCORnet: Vital.vitalid, Lab_result_cm.lab_result_cm_id, OMOP: Measurement.measurement_id, Observation.observation_id"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required","note":"FHIR: Observation.subject, PCORnet: Vital.patid, Lab_result_cm.patid, OMOP: Measurement.person_id, Observation.person_id"},{"name":"code","valueType":"code","description":"The code identifying the type of observation.","required":"required","permissible":{"codeList":["LOINC code"]},"notes":"LOINC is preferred as the coding system for the observation. In cases where there is a no LOINC code immediately available, a local test code would be accepted provided that there is a code system listing where the code originated. FHIR: Observation.code, PCORnet: specific VITAL table elements, PRO_CM: CM_LOINC, OHDSI CDM: Measurement.measurement_concept_id, Observation.observation_concept_id"},{"name":"observation_datetime","valueType":"dateTime","description":"The date-time of the observation, if the observation is made at a specific time.","notes":"Either the observation_datetime or the observation_period_start should be reported, but not both. FHIR: Observation.effectiveDateTime.start, PCORnet: Vital.measure_date, Vital.measure_time, OMOP: Measurement.measurement_date, Measurement.measurement_datetime, Observation.observation_date, Observation.observation_datetime"},{"name":"observation_period_start","valueType":"dateTime","description":"The date or date-time marking the beginning of the clinically-relevant time period of the observation.","notes":"Either the observation_datetime or the observation_period_start should be reported, but not both."},{"name":"observation_period_end","valueType":"dateTime","description":"The date or date-time marking end of the observation period. If the observation_period_start is reported and the observation_period_end is not reported, the observation is assumed to be ongoing at the time of reporting."},{"name":"result_string","description":"The value associated with the observation, represented as a text.","valueType":"text","notes":"A textual description of the observation result. A code is preferred if available."},{"name":"result_code","description":"The value associated with the observation, represented as a code.","valueType":"code","note":"FHIR: Observation.valueCodeableConcept, PCORnet: Vital.ht, Vital.wt, Vital.systolic, Vital.original_bmi, Vital.smoking, Vital.tobacco, Vital.tobacco_type"},{"name":"result_quantity","description":"The value associated with a lab result, represented as a number. The number can be either an integer or a float.","valueType":"quantity","note":"FHIR: Observation.valueQuantity, PCORnet: Vital.ht, Vital.wt, Vital.systolic, Vital.original_bmi"},{"name":"result_units","description":"Unit of measure for the associated with the lab result quantity.","valueType":"code","permissible":{"codeList":["UCUM code"]},"notes":"Nomenclature conforms to the Unified Code for Units of Measure (UCUM): https://unitsofmeasure.org/trac. FHIR: Observation.valueQuantity.system/codes PCORnet: OHDSI CDM: Measurement.unit_concept_id"},{"name":"result_interpretation","description":"An interpretation associated with the observation","valueType":"code","permissible":{"codeList":["Any of the codes specified in the http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation value set."]},"notes":"FHIR: Observation.interpretation"}]},{"name":"group","description":"A specific sub-population or cohort with common characteristics.","parent":"root","fields":[{"name":"group_id","valueType":"ID","description":"The id of the group definition.","required":"required"},{"name":"description","description":"A narrative explanation of the composition of the group.","valueType":"text","required":"required"},{"name":"managing_organization_id","description":"The lead organization responsible for the group.","valueType":"ID"},{"name":"managing_practitioner_id","description":"The lead practitioner responsible for the group.","valueType":"ID"}]},{"name":"group_member","description":"A specific sub-population or cohort with common characteristics.","parent":"group","fields":[{"name":"group_member_id","valueType":"ID","description":"Unique identifier assigned to patient in the context of the group or cohort, for example, ","required":"required"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the person included in the group.","required":"optional","notes":"Including the patient_id does not imply PII of the patient is revealed."},{"name":"group_id","valueType":"ID","description":"The id of the group definition.","required":"required"},{"name":"description","description":"A narrative explanation of the composition of the group.","valueType":"text","required":"required"},{"name":"member_start_date","description":"The date when the member was included in the group.","required":"required","valueType":"date"},{"name":"member_end_date","description":"The date when the member no longer was included in the group.","required":"optional","valueType":"date","notes":"If no end date is given, it is assumed the person is still a member of the group on the report date."}]},{"name":"facility","description":"An institution (physical or organizational) where healthcare is delivered.","parent":"root","fields":[{"name":"facility_id","description":"Unique identifier of the facility.","required":"required","valueType":"ID"},{"name":"facility_name","description":"Name of the facility.","required":"required","valueType":"string"},{"name":"location_id","description":"Identifier of the physical location of the facility.","valueType":"ID"}]},{"name":"measure_result","description":"A result of measuring a characteristic of the group, facility, organization, or jurisdiction.","parent":"measure","fields":[{"name":"measure_result_id","description":"Unique identifier of the measure instance.","required":"required","valueType":"ID"},{"name":"measure_id","description":"A code or identifier of the definition of measure reported.","valueType":"ID","notes":"Either measure ID or code should be provided."},{"name":"code","valueType":"code","description":"The code identifying the type of observation made on individuals in a population.","permissible":{"codeList":["LOINC","SNOMED-CT","CPT","RxNORM","NDC"]},"notes":"Codes should be reflect codes for observations on individuals. For example, the incidence of fever in a group should use the code SNOMED 426000000 (Fever greater than 100.4 Fahrenheit). The incidence of intubation in the group would use the SNOMED or CPT procedure code for intubation."},{"name":"measure_name","description":"The name of the measure or measure definition reported.","valueType":"string","notes":"Either the name or the ID of the measure should be provided."},{"name":"measure_subject_id","description":"Unique identifier of the group, provider, facility, or jurisdiction that the measure relates to.","required":"required","valueType":"ID"},{"name":"measure_datetime","valueType":"dateTime","description":"The time of the measure, if observed or calculated at a specific time."},{"name":"measure_period_start","valueType":"dateTime","description":"The date or date-time marking the beginning of the clinically-relevant time period of the measure.","notes":"Either the measure_datetime or the measure_period_start should be reported, but not both."},{"name":"measure_period_end","valueType":"dateTime","description":"The date or date-time marking end of the measure period. If the measure_period_start is reported and the measure_period_end is not reported, the measure is assumed to be ongoing at the time of reporting."},{"name":"result_quantity","description":"The value associated with the measure, represented as a number. The number can be either an integer or a float.","valueType":"quantity"},{"name":"result_units","description":"Unit of measure for the associated with the lab result quantity.","valueType":"code","permissible":{"codeList":["UCUM code"]},"notes":"Nomenclature conforms to the Unified Code for Units of Measure (UCUM): https://unitsofmeasure.org/trac"},{"name":"result_numerator","description":"The numerator value associated with a ratio observation, represented as an integer.","valueType":"integer"},{"name":"result_denominator","description":"The denominator value associated with a ratio observation, represented as an integer.","valueType":"integer"}]},{"name":"measure","description":"A specific metric or measurement.","parent":"root","fields":[{"name":"measure_id","description":"Unique identifier of the measure.","required":"required","valueType":"ID"},{"name":"measure_name","description":"The name of the measure defined.","valueType":"string"},{"name":"measure_description","description":"Description of the measure.","valueType":"string"},{"name":"last_changed","valueType":"date","description":"The date the measure definition was last changed.","required":"required"},{"name":"scoring","valueType":"code","description":"The way the measure is scored.","permissible":{"codeList":["proportion","ratio","continuous variable","cohort"]}},{"name":"inclusion_definition","valueType":"string","description":"Refers to the initial set of patients, facilities, or events to be evaluated by a measure."},{"name":"denominator_definition","valueType":"string","description":"The lower portion of a fraction used to calculate a rate, proportion, or ratio. The denominator can be the same as the inclusion, or a subset of the inclusions to further constrain the population for the purpose of the measure."},{"name":"numerator_definition","valueType":"string","description":"The upper portion of a fraction used to calculate a rate, proportion, or ratio. Also called the measure focus, it is the target process, condition, event, or outcome. Numerator criteria are the processes or outcomes expected for item defined in the denominator."},{"name":"measure_population","valueType":"string","description":"Measure population criteria define the patients or events for which the individual observation for the measure should be taken. Measure populations are used for continuous variable measures rather than numerator and denominator criteria."}]}],"updatedAt":"2020-04-27T20:10:37.295Z"},"versions":["2.70","2.66"],"currentVersion":"2.70"}')},651:function(e){e.exports=JSON.parse('{"name":"root","fields":[{"name":"reported_date","required":"optional"},{"name":"reporter_organization_id","required":"optional"},{"name":"reporter_practitioner_id","required":"optional"}],"required":"optional","parentName":"","children":[{"name":"patient","fields":[{"name":"patient_id","required":"required"},{"name":"date_of_birth","required":"optional"},{"name":"administrative_gender","required":"required"},{"name":"race","required":"optional"},{"name":"ethnicity","required":"optional"},{"name":"zip_code","required":"required"}],"required":"optional","parentName":"root","children":[{"name":"Vital_status","fields":[{"name":"patient_id","required":"required"},{"name":"vital_status","required":"required"},{"name":"cause_of_death","required":"conditional"},{"name":"date_of_death","required":"conditional"}],"required":"optional","parentName":"patient","children":[]},{"name":"patient_PII","fields":[{"name":"patient_id","required":"required"},{"name":"family_name","required":"optional"},{"name":"given_name(s)","required":"optional"},{"name":"address_line","required":"optional"},{"name":"address_city","required":"optional"},{"name":"address_state","required":"optional"},{"name":"primary_phone_number","required":"optional"}],"required":"optional","parentName":"patient","children":[]},{"name":"condition","fields":[{"name":"condition_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"category","required":"optional"},{"name":"recorded_date","required":"required"},{"name":"onset_date","required":"required"},{"name":"verification_date","required":"optional"},{"name":"clinical_status","required":"required"}],"required":"optional","parentName":"patient","children":[]},{"name":"med_exposure","fields":[{"name":"med_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"med_dose_quantity","required":"optional"},{"name":"med_dose_units","required":"optional"},{"name":"med_route","required":"optional"},{"name":"med_frequency","required":"optional"},{"name":"med_start_date","required":"required"},{"name":"med_stop_date","required":"required"}],"required":"optional","parentName":"patient","children":[]},{"name":"procedure","fields":[{"name":"procedure_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"status","required":"required"},{"name":"start_date","required":"required"},{"name":"end_date","required":"optional"}],"required":"optional","parentName":"patient","children":[]},{"name":"lab_result","fields":[{"name":"lab_result_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"relevant_dateTime","required":"optional"},{"name":"result_dateTime","required":"optional"},{"name":"result_code","required":"optional"},{"name":"result_quantity","required":"optional"},{"name":"result_units","required":"optional"},{"name":"lab_result_interpretation","required":"optional"}],"required":"optional","parentName":"patient","children":[]},{"name":"encounter","fields":[{"name":"encounter_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"facility_id","required":"optional"},{"name":"encounter_class","required":"required"},{"name":"admission_date","required":"required"},{"name":"admission_source","required":"optional"},{"name":"discharge_date","required":"required"},{"name":"discharge_disposition","required":"required"},{"name":"initial_diagnosis","required":"optional"},{"name":"admitting_diagnosis","required":"conditional"},{"name":"discharge_diagnosis","required":"conditional"}],"required":"optional","parentName":"patient","children":[{"name":"encounter_detail","fields":[{"name":"encounter_id","required":"required"},{"name":"encounter_detail_id","required":"required"},{"name":"type","required":"required"},{"name":"arrival_date","required":"optional"},{"name":"departure_date","required":"optional"},{"name":"length of stay","required":"optional"}],"required":"optional","parentName":"encounter","children":[]}]},{"name":"patient_observation","fields":[{"name":"observation_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"observation_datetime","required":"optional"},{"name":"observation_period_start","required":"optional"},{"name":"observation_period_end","required":"optional"},{"name":"result_string","required":"optional"},{"name":"result_code","required":"optional"},{"name":"result_quantity","required":"optional"},{"name":"result_units","required":"optional"},{"name":"result_interpretation","required":"optional"}],"required":"optional","parentName":"patient","children":[]}]},{"name":"group","fields":[{"name":"group_id","required":"required"},{"name":"description","required":"required"},{"name":"managing_organization_id","required":"optional"},{"name":"managing_practitioner_id","required":"optional"}],"required":"optional","parentName":"root","children":[{"name":"group_member","fields":[{"name":"group_member_id","required":"required"},{"name":"patient_id","required":"optional"},{"name":"group_id","required":"required"},{"name":"description","required":"required"},{"name":"member_start_date","required":"required"},{"name":"member_end_date","required":"optional"}],"required":"optional","parentName":"group","children":[]}]},{"name":"facility","fields":[{"name":"facility_id","required":"required"},{"name":"facility_name","required":"required"},{"name":"location_id","required":"optional"}],"required":"optional","parentName":"root","children":[]},{"name":"measure","fields":[{"name":"measure_id","required":"required"},{"name":"measure_name","required":"optional"},{"name":"measure_description","required":"optional"},{"name":"last_changed","required":"required"},{"name":"scoring","required":"optional"},{"name":"inclusion_definition","required":"optional"},{"name":"denominator_definition","required":"optional"},{"name":"numerator_definition","required":"optional"},{"name":"measure_population","required":"optional"}],"required":"optional","parentName":"root","children":[{"name":"measure_result","fields":[{"name":"measure_result_id","required":"required"},{"name":"measure_id","required":"optional"},{"name":"code","required":"optional"},{"name":"measure_name","required":"optional"},{"name":"measure_subject_id","required":"required"},{"name":"measure_datetime","required":"optional"},{"name":"measure_period_start","required":"optional"},{"name":"measure_period_end","required":"optional"},{"name":"result_quantity","required":"optional"},{"name":"result_units","required":"optional"},{"name":"result_numerator","required":"optional"},{"name":"result_denominator","required":"optional"}],"required":"optional","parentName":"measure","children":[]}]}]}')}}]);